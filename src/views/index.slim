ruby:
  columns = %w[ID Command Image Names Status]

  tasks = docker 'tasks'
  ps = docker 'containers/json'
  services = docker 'services'

  tasks = tasks.wait.group_by { _1['ServiceID'] }
  tasks.transform_values { |a| a.sort_by! { Time.parse _1['UpdatedAt']}.reverse! }

  services = services.wait
  stack_ls = services.group_by { |s| s.dig('Spec', 'Labels')["com.docker.stack.namespace"] }
  services.each {
    _1['Name'] = _1['Spec']['Name']
    _1['NameT'] = _1['Spec']['Name'].gsub(/^[^_]+_/, &->(s) { "<span class='stack_name'>#{s}</span>" })
    _1['CurrentState'] = tasks[_1['ID']]&.first['Status']['State'] rescue 'n/a'
    _1['Replicas'] += ' g' if _1['Spec']['Mode'] == 'global'
    _1['TitleImage'] = _1.dig('Spec', 'TaskTemplate', 'ContainerSpec', 'Image')
    _1['Image'] = _1.dig('Spec', 'TaskTemplate', 'ContainerSpec', 'Image')[/^(?:(?<domain>[^\/]+\.[^\/]+(?::\d+)?)[\/])?(?<name>.+)$/,2] || ''
  }

  ps = ps.wait
  ps.each {
    _1['ID'] = _1['Id'][0..12]
    _1['Image'] = _1['Image'].gsub(/@sha256:.*/, &->(s) { "<span class='sha256'>#{s}</span>" })
    _1['Names'] = _1['Names'].map { |n| n.gsub(/\.\d+\..*/, &->(s) { "<span class='container_name'>#{s}</span>" }) }.join ','
  }

h1 Stack Insight: #{params[:stack]}
pre: ul
  - stack_ls.each do |name, s|
    li : a href="stack?stack=#{name}" #{name}  (#{s.count})

h2 Docker service ls
- scolumns = %w[NameT Image Replicas CurrentState]

pre: table
  - scolumns.each do |k|
    th = k
  th Actions
  - services.each do |s|
    tr
      - scolumns.each do |c|
        td title=s["Title#{c}"] == s[c]
      td
        a.action href="ps/?service=#{s['Name']}" ps
        a.action href="inspect/?service=#{s['Name']}" inspect
        a.action href="logs/?service=#{s['Name']}" logs
        a.action href="update/?service=#{s['Name']}" onclick="return confirm('Are you sure to Pull and Update?')" update

h2 Docker ps
pre: table
  - columns.each do |k|
    th = k
  - ps.each do |p|
    tr
      - columns.each do |c|
        td == p[c]
